var fs = require('fs');
var path = require('path');
//var express = require('express');

module.exports = session;

session.path = null;
session.duration = 60;

session.setPath = function(_path) {
    if (fs.existsSync(_path)) {
        this.path = _path;
    }
    else {
        throw 'Path to session folder does not exist: ' + _path;
    }
    return this;
};

session.getPath = function() {
    if (this.path === null) {
        throw 'Path to session folder not set.';
    }
    return this.path;
};

session.getPathId = function(id) {
    return path.join(this.getPath(), id + '.json');
};

session.load = function(id) {
    var pathId = this.getPathId(id);
    var content = null;
    if (fs.existsSync(pathId)) {
        content = JSON.parse(fs.readFileSync(pathId, 'utf8'));
        if (content.validUntil < Date.now()) {
            content = null;
        }
    }
    if (!content) {
        content = this.save(id);
    }
    else {
        content = this.save(id, content.data, content.duration);
    }
    return content.data;
};

session.save = function(id, data, duration) {
    if (typeof(duration) === 'undefined') {
        duration = session.duration;
    }
    var pathId = this.getPathId(id);
    var content = {
        'validUntil': Date.now()+duration*60*1000, //millisecond
        'duration': duration,
        'data': data
    };
    fs.writeFileSync(pathId, JSON.stringify(content), 'utf8');
    return content;
};

session.generateId = function() {
    var crypto = require('crypto');
    var id = crypto.randomBytes(64).toString('hex');
    var pathId = this.getPathId(id);
    if (fs.existsSync(pathId)) {
        id = this.generateId();
    }
    return id;
}

function session() {
    
}